<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="957e0ca5-19e8-43a9-9d29-7510b27f8472" activeEnvironment="Default" name="Symphony-ESB" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:restMockService id="62735208-85a3-4df6-8047-287cf586c559" port="8080" path="/" host="felipe-Inspiron-3443" name="Symphony-ESB Samples"><con:settings/><con:properties/><con:restMockAction name="order" method="POST" resourcePath="/order" id="111ca6ee-7182-4f1f-8aed-712a6e63da1d"><con:settings/><con:defaultResponse>Response Order 123 Created</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response Order 123 Created" id="be13d7bd-1c09-4f18-b389-5482fc76a409" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"number": 321
}
</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>